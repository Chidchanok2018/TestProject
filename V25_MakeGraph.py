# -*- coding: utf-8 -*-
from networkx import *
import matplotlib.pyplot as plt

c = [(17, 12), (19, 9), (34, 41), (35, 2), (15, 20), (4, 8), (12, 24), (1, 32), (13, 4), (33, 30), (10, 46),\
    (41, 0), (30, 3), (8, 49), (39, 43), (43, 23), (24, 33), (7, 5), (11, 10), (2, 15), (3, 20), (22, 15),\
    (47, 37), (37, 6), (16, 25), (23, 11), (36, 45), (26, 19), (13, 36), (42, 38), (27, 42), (28, 14),\
    (38, 31), (5, 35), (49, 40), (10, 39), (32, 22), (12, 48), (21, 27), (18, 29), (25, 44), (40, 47),\
    (6, 10), (44, 7), (29, 34), (46, 13), (45, 18), (48, 28), (25, 1), (20, 21)]

C1 = [20, 21, 46, 29, 5, 8]
C2 = [11, 10, 36, 49]
C3 = [47, 38, 15, 14]
C4 = [19, 25, 42, 35]
C5 = [33, 3, 7, 16]
C6 = [24, 26, 22, 17, 41]
C7 = [1, 32, 37, 43, 23]
C8 = [31, 2, 48, 40, 6]
C9 = [45, 44, 30]
C_ORI = [u'28', u'48', u'43', u'49', u'24', u'25', u'26', u'27', u'20', u'21', u'22', u'23', u'46', u'47', u'44', u'45', u'42', u'29', u'40', u'41', u'1', u'0', u'3', u'2', u'5', u'4', u'7', u'6', u'9', u'8', u'13', u'12', u'11', u'10', u'39', u'38', u'15', u'14', u'17', u'16', u'33', u'32', u'31', u'30', u'37', u'36', u'35', u'34', u'19', u'18']
E1 = [[20, 21], [20, 46], [21, 46], [20, 21], [20, 8], [21, 8], [29, 20], [29, 21], [20, 21], [29, 20], [29, 8], [20, 8], [20, 46], [20, 5], [46, 5], [20, 5], [20, 8], [5, 8], [29, 21], [29, 8], [21, 8]]
E2 = [[49, 11], [49, 10], [11, 10], [49, 11], [49, 8], [8, 11], [49, 10], [49, 36], [10, 36]]
E3 = [[47, 14], [47, 38], [38, 14], [47, 38], [47, 15], [38, 15], [38, 10], [38, 15], [10, 15]]
E4 = [[25, 19], [25, 42], [42, 19], [25, 42], [25, 8], [42, 8], [25, 35], [25, 8], [8, 35]]
E5 = [[3, 16], [3, 33], [16, 33], [7, 19], [7, 33], [33, 19], [3, 33], [3, 7], [7, 33]]
E6 = [[24, 26], [24, 41], [26, 41], [24, 17], [24, 41], [41, 17], [22, 24], [22, 26], [24, 26]]
E7 = [[1, 23], [1, 32], [23, 32], [1, 23], [1, 37], [23, 37], [43, 23], [43, 32], [23, 32]]
E8 = [[2, 31], [2, 6], [6, 31], [40, 31], [40, 6], [6, 31], [48, 31], [48, 40], [40, 31]]
E9 = [[30, 10], [30, 45], [45, 10], [44, 45], [44, 16], [45, 16], [30, 45], [30, 16], [45, 16], [20, 16], [20, 45], [45, 16], [30, 45], [30, 20], [20, 45], [30, 45], [30, 44], [44, 45], [30, 16], [30, 44], [44, 16], [30, 20], [30, 16], [20, 16]]
E_ORI = [(u'28', u'11'), (u'28', u'24'), (u'28', u'39'), (u'28', u'38'), (u'28', u'15'), (u'28', u'21'), (u'28', u'22'), (u'28', u'16'), (u'28', u'32'), (u'28', u'48'), (u'28', u'23'), (u'28', u'20'), (u'28', u'49'), (u'28', u'6'), (u'28', u'8'), (u'48', u'11'), (u'48', u'10'), (u'48', u'12'), (u'48', u'15'), (u'48', u'22'), (u'48', u'25'), (u'48', u'46'), (u'48', u'18'), (u'48', u'31'), (u'48', u'42'), (u'48', u'29'), (u'48', u'40'), (u'48', u'34'), (u'48', u'47'), (u'48', u'5'), (u'48', u'6'), (u'48', u'20'), (u'48', u'44'), (u'43', u'11'), (u'43', u'10'), (u'43', u'13'), (u'43', u'15'), (u'43', u'14'), (u'43', u'17'), (u'43', u'16'), (u'43', u'19'), (u'43', u'18'), (u'43', u'39'), (u'43', u'37'), (u'43', u'29'), (u'43', u'35'), (u'43', u'20'), (u'43', u'4'), (u'43', u'47'), (u'43', u'49'), (u'43', u'8'), (u'43', u'40'), (u'43', u'25'), (u'43', u'21'), (u'49', u'24'), (u'49', u'12'), (u'49', u'15'), (u'49', u'17'), (u'49', u'16'), (u'49', u'46'), (u'49', u'23'), (u'49', u'29'), (u'49', u'40'), (u'49', u'34'), (u'49', u'3'), (u'49', u'27'), (u'49', u'5'), (u'49', u'36'), (u'49', u'8'), (u'49', u'41'), (u'24', u'25'), (u'24', u'39'), (u'24', u'38'), (u'24', u'20'), (u'24', u'21'), (u'24', u'17'), (u'24', u'16'), (u'24', u'19'), (u'24', u'42'), (u'24', u'31'), (u'24', u'23'), (u'24', u'45'), (u'24', u'34'), (u'24', u'33'), (u'24', u'3'), (u'24', u'27'), (u'24', u'9'), (u'24', u'41'), (u'25', u'12'), (u'25', u'14'), (u'25', u'19'), (u'25', u'32'), (u'25', u'44'), (u'25', u'30'), (u'25', u'35'), (u'25', u'41'), (u'25', u'0'), (u'25', u'3'), (u'25', u'2'), (u'25', u'40'), (u'25', u'7'), (u'25', u'46'), (u'25', u'9'), (u'25', u'29'), (u'25', u'33'), (u'26', u'13'), (u'26', u'12'), (u'26', u'15'), (u'26', u'14'), (u'26', u'17'), (u'26', u'23'), (u'26', u'47'), (u'26', u'44'), (u'26', u'22'), (u'26', u'29'), (u'26', u'1'), (u'26', u'3'), (u'26', u'2'), (u'26', u'4'), (u'26', u'7'), (u'26', u'31'), (u'27', u'22'), (u'27', u'46'), (u'27', u'47'), (u'27', u'40'), (u'27', u'41'), (u'27', u'0'), (u'27', u'2'), (u'27', u'4'), (u'27', u'6'), (u'27', u'9'), (u'27', u'8'), (u'27', u'38'), (u'27', u'11'), (u'27', u'10'), (u'27', u'12'), (u'27', u'14'), (u'27', u'17'), (u'27', u'16'), (u'27', u'32'), (u'27', u'30'), (u'20', u'11'), (u'20', u'15'), (u'20', u'16'), (u'20', u'19'), (u'20', u'42'), (u'20', u'37'), (u'20', u'41'), (u'20', u'7'), (u'21', u'22'), (u'21', u'46'), (u'21', u'44'), (u'21', u'45'), (u'21', u'40'), (u'21', u'41'), (u'21', u'0'), (u'21', u'3'), (u'21', u'2'), (u'21', u'4'), (u'21', u'7'), (u'21', u'8'), (u'21', u'11'), (u'21', u'10'), (u'21', u'12'), (u'21', u'14'), (u'21', u'18'), (u'21', u'31'), (u'21', u'30'), (u'21', u'36'), (u'21', u'35'), (u'22', u'42'), (u'22', u'23'), (u'22', u'47'), (u'22', u'45'), (u'22', u'29'), (u'22', u'2'), (u'22', u'4'), (u'22', u'7'), (u'22', u'9'), (u'22', u'8'), (u'22', u'39'), (u'22', u'11'), (u'22', u'10'), (u'22', u'13'), (u'22', u'15'), (u'22', u'16'), (u'22', u'19'), (u'22', u'18'), (u'22', u'30'), (u'22', u'36'), (u'23', u'11'), (u'23', u'13'), (u'23', u'38'), (u'23', u'47'), (u'23', u'34'), (u'23', u'0'), (u'23', u'3'), (u'23', u'2'), (u'23', u'5'), (u'23', u'4'), (u'46', u'10'), (u'46', u'39'), (u'46', u'15'), (u'46', u'16'), (u'46', u'19'), (u'46', u'18'), (u'46', u'31'), (u'46', u'30'), (u'46', u'41'), (u'46', u'0'), (u'46', u'3'), (u'46', u'38'), (u'46', u'5'), (u'46', u'6'), (u'46', u'8'), (u'46', u'33'), (u'47', u'11'), (u'47', u'10'), (u'47', u'15'), (u'47', u'16'), (u'47', u'18'), (u'47', u'39'), (u'47', u'34'), (u'47', u'5'), (u'47', u'4'), (u'47', u'7'), (u'47', u'6'), (u'47', u'8'), (u'47', u'32'), (u'44', u'13'), (u'44', u'12'), (u'44', u'33'), (u'44', u'31'), (u'44', u'45'), (u'44', u'37'), (u'44', u'1'), (u'44', u'3'), (u'44', u'38'), (u'45', u'42'), (u'45', u'29'), (u'45', u'40'), (u'45', u'41'), (u'45', u'1'), (u'45', u'3'), (u'45', u'4'), (u'45', u'7'), (u'45', u'6'), (u'45', u'9'), (u'45', u'11'), (u'45', u'10'), (u'45', u'13'), (u'45', u'19'), (u'45', u'31'), (u'45', u'30'), (u'45', u'37'), (u'45', u'35'), (u'42', u'1'), (u'42', u'2'), (u'42', u'5'), (u'42', u'4'), (u'42', u'7'), (u'42', u'6'), (u'42', u'9'), (u'42', u'10'), (u'42', u'38'), (u'42', u'15'), (u'42', u'14'), (u'42', u'17'), (u'42', u'16'), (u'42', u'19'), (u'42', u'37'), (u'42', u'36'), (u'42', u'35'), (u'42', u'34'), (u'42', u'33'), (u'29', u'11'), (u'29', u'17'), (u'29', u'19'), (u'29', u'31'), (u'29', u'41'), (u'29', u'3'), (u'29', u'8'), (u'40', u'0'), (u'40', u'3'), (u'40', u'2'), (u'40', u'5'), (u'40', u'4'), (u'40', u'7'), (u'40', u'8'), (u'40', u'38'), (u'40', u'10'), (u'40', u'12'), (u'40', u'15'), (u'40', u'19'), (u'40', u'31'), (u'40', u'37'), (u'40', u'36'), (u'40', u'35'), (u'41', u'1'), (u'41', u'7'), (u'41', u'38'), (u'41', u'11'), (u'41', u'10'), (u'41', u'13'), (u'41', u'12'), (u'41', u'15'), (u'41', u'14'), (u'41', u'17'), (u'41', u'19'), (u'41', u'18'), (u'41', u'31'), (u'41', u'36'), (u'41', u'33'), (u'41', u'32'), (u'1', u'11'), (u'1', u'39'), (u'1', u'38'), (u'1', u'15'), (u'1', u'33'), (u'1', u'18'), (u'1', u'19'), (u'1', u'3'), (u'1', u'2'), (u'1', u'9'), (u'1', u'8'), (u'0', u'10'), (u'0', u'39'), (u'0', u'38'), (u'0', u'32'), (u'0', u'37'), (u'0', u'13'), (u'0', u'3'), (u'0', u'2'), (u'0', u'5'), (u'0', u'35'), (u'0', u'6'), (u'3', u'6'), (u'3', u'9'), (u'3', u'8'), (u'3', u'10'), (u'3', u'13'), (u'3', u'38'), (u'3', u'14'), (u'3', u'17'), (u'3', u'33'), (u'3', u'18'), (u'3', u'30'), (u'3', u'37'), (u'3', u'36'), (u'3', u'34'), (u'3', u'32'), (u'2', u'4'), (u'2', u'7'), (u'2', u'9'), (u'2', u'39'), (u'2', u'11'), (u'2', u'10'), (u'2', u'13'), (u'2', u'15'), (u'2', u'17'), (u'2', u'33'), (u'2', u'32'), (u'2', u'31'), (u'2', u'37'), (u'2', u'36'), (u'5', u'12'), (u'5', u'15'), (u'5', u'17'), (u'5', u'33'), (u'5', u'30'), (u'5', u'16'), (u'5', u'35'), (u'5', u'34'), (u'5', u'9'), (u'5', u'31'), (u'4', u'11'), (u'4', u'38'), (u'4', u'15'), (u'4', u'16'), (u'4', u'31'), (u'4', u'36'), (u'4', u'30'), (u'4', u'9'), (u'4', u'8'), (u'4', u'34'), (u'7', u'6'), (u'7', u'9'), (u'7', u'11'), (u'7', u'10'), (u'7', u'38'), (u'7', u'14'), (u'7', u'19'), (u'7', u'32'), (u'7', u'30'), (u'7', u'36'), (u'7', u'35'), (u'7', u'34'), (u'7', u'33'), (u'6', u'11'), (u'6', u'10'), (u'6', u'14'), (u'6', u'16'), (u'6', u'33'), (u'6', u'31'), (u'6', u'30'), (u'6', u'8'), (u'9', u'11'), (u'9', u'10'), (u'9', u'38'), (u'9', u'15'), (u'9', u'14'), (u'9', u'16'), (u'9', u'19'), (u'9', u'18'), (u'9', u'30'), (u'9', u'32'), (u'8', u'39'), (u'8', u'13'), (u'8', u'12'), (u'8', u'15'), (u'8', u'33'), (u'8', u'30'), (u'8', u'37'), (u'8', u'36'), (u'13', u'11'), (u'13', u'10'), (u'13', u'39'), (u'13', u'38'), (u'13', u'14'), (u'13', u'16'), (u'13', u'33'), (u'13', u'32'), (u'13', u'31'), (u'13', u'36'), (u'13', u'35'), (u'13', u'34'), (u'12', u'11'), (u'12', u'38'), (u'12', u'17'), (u'12', u'32'), (u'12', u'34'), (u'11', u'39'), (u'11', u'38'), (u'11', u'14'), (u'11', u'17'), (u'11', u'32'), (u'11', u'31'), (u'11', u'37'), (u'11', u'35'), (u'11', u'34'), (u'10', u'39'), (u'10', u'14'), (u'10', u'33'), (u'10', u'31'), (u'10', u'37'), (u'10', u'35'), (u'39', u'14'), (u'39', u'19'), (u'39', u'32'), (u'39', u'31'), (u'39', u'36'), (u'39', u'35'), (u'38', u'15'), (u'38', u'16'), (u'38', u'33'), (u'38', u'35'), (u'38', u'34'), (u'15', u'16'), (u'15', u'33'), (u'15', u'18'), (u'15', u'36'), (u'14', u'17'), (u'14', u'19'), (u'14', u'18'), (u'14', u'31'), (u'14', u'37'), (u'14', u'34'), (u'14', u'33'), (u'14', u'32'), (u'17', u'32'), (u'17', u'30'), (u'16', u'37'), (u'16', u'33'), (u'16', u'30'), (u'16', u'18'), (u'33', u'19'), (u'33', u'32'), (u'33', u'31'), (u'33', u'36'), (u'33', u'35'), (u'31', u'18'), (u'31', u'30'), (u'31', u'36'), (u'30', u'19'), (u'37', u'18'), (u'37', u'36'), (u'36', u'19'), (u'35', u'19'), (u'35', u'18'), (u'19', u'18')]

C_All = C1 + C2 + C3 + C4 + C5 + C6 + C7 + C8 + C9
E_All = E1 + E2 + E3 + E4 + E5 + E6 + E7 + E8 + E9

K = nx.Graph()

# เปลี่ยน โหนด ทั้งหมดเป็น int
ND = []
for hh in C_ORI:
    hh = int(hh)
    ND.append(hh)

pos = {}
m = 0
for u in ND:
    pos[u] = c[m]
    m += 1

K.add_nodes_from(pos.keys())  # บอกว่าจะเริ่มเพิ่มโหนดตามนี้ โหนดเป็น int
for n, p in pos.iteritems():
    K.node[n]['pos'] = p

# เปลี่ยน กิ่งทั้งหมดเป็น int
Ed = []
for h in E_ORI:
    keep = []
    for i in h:
        i = int(i)
        keep.append(i)
    Ed.append(keep)

for v in Ed:
    K.add_edge(v[0], v[1])

draw(K, pos, edge_color='skyblue', node_color='red')
# plt.show()

# ------------- เริ่มวาดกราฟครัสเตอร์ ------------- #
G = nx.Graph()
# ---- C 1 ---- #
C1_S = set(C1)
E1_1 = []
for ee in E1:
    ee_s = set(ee)
    a = C1_S & ee_s
    if len(a) == 2:
        E1_1.append(ee)
pos = {}
m = 0
for q in C1:
    pos[q] = c[m]
    m += 1
G.add_nodes_from(pos.keys())  # บอกว่าจะเริ่มเพิ่มโหนดตามนี้ โหนดเป็น int
for n, p in pos.iteritems():
    G.node[n]['pos'] = p
for v in E1_1:
    G.add_edge(v[0], v[1])

draw(G, pos, edge_color='skyblue', node_color='purple')
# plt.show()

# ---- C 2 ---- #
pos = {}
G.clear()

C2_S = set(C2)
E2_1 = []
for ee in E2:
    ee_s = set(ee)
    a = C2_S & ee_s
    if len(a) == 2:
        E2_1.append(ee)
for q in C2:
    pos[q] = c[m]
    m += 1
G.add_nodes_from(pos.keys())  # บอกว่าจะเริ่มเพิ่มโหนดตามนี้ โหนดเป็น int
for n, p in pos.iteritems():
    G.node[n]['pos'] = p
for v in E2_1:
    G.add_edge(v[0], v[1])

draw(G, pos, edge_color='skyblue', node_color='magenta')
# plt.show()

# ---- C 3 ---- #
pos = {}
G.clear()

C3_S = set(C3)
E3_1 = []
for ee in E3:
    ee_s = set(ee)
    a = C3_S & ee_s
    if len(a) == 2:
        E3_1.append(ee)
for q in C3:
    pos[q] = c[m]
    m += 1
G.add_nodes_from(pos.keys())  # บอกว่าจะเริ่มเพิ่มโหนดตามนี้ โหนดเป็น int
for n, p in pos.iteritems():
    G.node[n]['pos'] = p
for v in E3_1:
    G.add_edge(v[0], v[1])

draw(G, pos, edge_color='skyblue', node_color='green')
# plt.show()

# ---- C 4 ---- #
pos = {}
G.clear()

C4_S = set(C4)
E4_1 = []
for ee in E4:
    ee_s = set(ee)
    a = C4_S & ee_s
    if len(a) == 2:
        E4_1.append(ee)
for q in C4:
    pos[q] = c[m]
    m += 1
G.add_nodes_from(pos.keys())  # บอกว่าจะเริ่มเพิ่มโหนดตามนี้ โหนดเป็น int
for n, p in pos.iteritems():
    G.node[n]['pos'] = p
for v in E4_1:
    G.add_edge(v[0], v[1])

draw(G, pos, edge_color='skyblue', node_color='yellow')
# plt.show()

# ---- C 5 ---- #
pos = {}
G.clear()

C5_S = set(C5)
E5_1 = []
for ee in E5:
    ee_s = set(ee)
    a = C5_S & ee_s
    if len(a) == 2:
        E5_1.append(ee)
for q in C5:
    pos[q] = c[m]
    m += 1
G.add_nodes_from(pos.keys())  # บอกว่าจะเริ่มเพิ่มโหนดตามนี้ โหนดเป็น int
for n, p in pos.iteritems():
    G.node[n]['pos'] = p
for v in E5_1:
    G.add_edge(v[0], v[1])

draw(G, pos, edge_color='skyblue', node_color='Salmon')
# plt.show()

# ---- C 6 ---- #
pos = {}
G.clear()

C6_S = set(C6)
E6_1 = []
for ee in E6:
    ee_s = set(ee)
    a = C6_S & ee_s
    if len(a) == 2:
        E6_1.append(ee)
for q in C6:
    pos[q] = c[m]
    m += 1
G.add_nodes_from(pos.keys())  # บอกว่าจะเริ่มเพิ่มโหนดตามนี้ โหนดเป็น int
for n, p in pos.iteritems():
    G.node[n]['pos'] = p
for v in E6_1:
    G.add_edge(v[0], v[1])

draw(G, pos, edge_color='skyblue', node_color='brown')
# plt.show()

# ---- C 7 ---- #
pos = {}
G.clear()

C7_S = set(C7)
E7_1 = []
for ee in E7:
    ee_s = set(ee)
    a = C7_S & ee_s
    if len(a) == 2:
        E7_1.append(ee)
for q in C7:
    pos[q] = c[m]
    m += 1
G.add_nodes_from(pos.keys())  # บอกว่าจะเริ่มเพิ่มโหนดตามนี้ โหนดเป็น int
for n, p in pos.iteritems():
    G.node[n]['pos'] = p
for v in E7_1:
    G.add_edge(v[0], v[1])

draw(G, pos, edge_color='skyblue', node_color='blue')
# plt.show()

# ---- C 8 ---- #
pos = {}
G.clear()

C8_S = set(C8)
E8_1 = []
for ee in E8:
    ee_s = set(ee)
    a = C8_S & ee_s
    if len(a) == 2:
        E8_1.append(ee)
G.add_nodes_from(pos.keys())  # บอกว่าจะเริ่มเพิ่มโหนดตามนี้ โหนดเป็น int
for n, p in pos.iteritems():
    G.node[n]['pos'] = p
# for v in E8_1:
#     G.add_edge(v[0], v[1])

draw(G, pos, edge_color='skyblue', node_color='black')
# plt.show()

# ---- C 9 ---- #
pos = {}
G.clear()

C9_S = set(C9)
E9_1 = []
for ee in E9:
    ee_s = set(ee)
    a = C9_S & ee_s
    if len(a) == 2:
        E9_1.append(ee)
G.add_nodes_from(pos.keys())  # บอกว่าจะเริ่มเพิ่มโหนดตามนี้ โหนดเป็น int
for n, p in pos.iteritems():
    G.node[n]['pos'] = p
# for v in E8_1:
#     G.add_edge(v[0], v[1])

draw(G, pos, edge_color='skyblue', node_color='GreenYellow')
plt.show()

print 'a'
